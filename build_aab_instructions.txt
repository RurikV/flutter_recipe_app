# Building an Android App Bundle (AAB) for Google Play Store

Follow these steps to build an AAB file for your Flutter app:

## Prerequisites
1. Make sure you have updated the app metadata in pubspec.yaml
2. Ensure you have set up the signing configuration in android/app/build.gradle.kts
3. Create a key.properties file with your keystore information

## Keystore Setup
Before building the AAB, you need to generate a keystore file:

1. Open a terminal and navigate to the root directory of your Flutter project
2. Run the following command to generate a keystore file:
```
keytool -genkey -v -keystore android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
```
3. Make sure the keystore file is created in the location specified in your key.properties file (android/debug.keystore)

Note: For a production app, you should generate a proper upload keystore with your own secure passwords and keep it in a safe location. The debug keystore is used here for demonstration purposes only.

## Building the AAB

### Option 1: Using Flutter CLI
Run the following command from the root of your Flutter project:
```
flutter build appbundle
```

The AAB file will be created at:
```
build/app/outputs/bundle/release/app-release.aab
```

### Option 2: Using Android Studio
1. Open your Flutter project in Android Studio
2. Select "Build" > "Flutter" > "Build App Bundle"

## Verifying the AAB
You can verify the AAB file using the bundletool utility:
```
java -jar bundletool.jar validate --bundle=build/app/outputs/bundle/release/app-release.aab
```

## Testing the AAB
You can test the AAB file on a device using bundletool:
```
java -jar bundletool.jar build-apks --bundle=build/app/outputs/bundle/release/app-release.aab --output=app.apks
java -jar bundletool.jar install-apks --apks=app.apks
```

## Uploading to Google Play Store
1. Log in to the Google Play Console (https://play.google.com/console)
2. Create a new app or select an existing app
3. Navigate to "Production" > "Create new release"
4. Upload the AAB file
5. Fill in the release details and submit for review

Note: For this project, we're using debug keys for demonstration purposes. In a production environment, you should generate a proper keystore and keep it secure.
